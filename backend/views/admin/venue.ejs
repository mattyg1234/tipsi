<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>TIPSI Admin - Venue Management</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            background: #f8fafc;
            color: #1e293b;
            line-height: 1.6;
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
        }

        .header {
            text-align: center;
            margin-bottom: 40px;
            padding: 40px 0;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            border-radius: 16px;
        }

        .header h1 {
            font-size: 36px;
            margin-bottom: 10px;
        }

        .header p {
            font-size: 18px;
            opacity: 0.9;
        }

        .actions {
            display: flex;
            gap: 20px;
            margin-bottom: 40px;
            flex-wrap: wrap;
        }

        .btn {
            padding: 12px 24px;
            border: none;
            border-radius: 8px;
            font-size: 16px;
            font-weight: 500;
            cursor: pointer;
            transition: all 0.2s ease;
            text-decoration: none;
            display: inline-block;
        }

        .btn-primary {
            background: #3b82f6;
            color: white;
        }

        .btn-primary:hover {
            background: #2563eb;
        }

        .btn-success {
            background: #10b981;
            color: white;
        }

        .btn-success:hover {
            background: #059669;
        }

        .btn-secondary {
            background: #6b7280;
            color: white;
        }

        .btn-secondary:hover {
            background: #4b5563;
        }

        .modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.5);
            z-index: 1000;
        }

        .modal.show {
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .modal-content {
            background: white;
            padding: 32px;
            border-radius: 16px;
            max-width: 500px;
            width: 90%;
            max-height: 90vh;
            overflow-y: auto;
        }

        .modal-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 24px;
        }

        .modal-title {
            font-size: 24px;
            font-weight: bold;
        }

        .close {
            font-size: 28px;
            cursor: pointer;
            color: #6b7280;
        }

        .form-group {
            margin-bottom: 20px;
        }

        .form-label {
            display: block;
            margin-bottom: 8px;
            font-weight: 500;
        }

        .form-input {
            width: 100%;
            padding: 12px 16px;
            border: 2px solid #e5e7eb;
            border-radius: 8px;
            font-size: 16px;
        }

        .form-input:focus {
            outline: none;
            border-color: #3b82f6;
        }

        .color-picker {
            width: 60px;
            height: 40px;
            border: none;
            border-radius: 8px;
            cursor: pointer;
        }

        .venues-grid {
            display: grid;
            gap: 24px;
            grid-template-columns: repeat(auto-fill, minmax(400px, 1fr));
        }

        .venue-card {
            background: white;
            border-radius: 16px;
            padding: 24px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
            border: 1px solid #e5e7eb;
        }

        .venue-header {
            display: flex;
            align-items: center;
            gap: 16px;
            margin-bottom: 20px;
        }

        .venue-logo {
            width: 60px;
            height: 60px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 20px;
            font-weight: bold;
            color: white;
        }

        .venue-info h3 {
            font-size: 20px;
            margin-bottom: 4px;
        }

        .venue-stats {
            display: grid;
            grid-template-columns: repeat(3, 1fr);
            gap: 16px;
            margin-bottom: 20px;
        }

        .stat {
            text-align: center;
            padding: 16px;
            background: #f8fafc;
            border-radius: 8px;
        }

        .stat-number {
            font-size: 24px;
            font-weight: bold;
            color: #3b82f6;
        }

        .stat-label {
            font-size: 14px;
            color: #6b7280;
            margin-top: 4px;
        }

        .menu-section {
            margin-top: 20px;
        }

        .menu-title {
            font-size: 18px;
            font-weight: 600;
            margin-bottom: 12px;
            color: #374151;
        }

        .menu-items {
            display: grid;
            gap: 8px;
        }

        .menu-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 12px;
            background: #f8fafc;
            border-radius: 6px;
        }

        .menu-item-name {
            font-weight: 500;
        }

        .menu-item-price {
            color: #059669;
            font-weight: 600;
        }

        .add-menu-form {
            margin-top: 16px;
            padding: 16px;
            background: #f1f5f9;
            border-radius: 8px;
        }

        .add-menu-form .form-group {
            margin-bottom: 12px;
        }

        .add-menu-form .form-input {
            font-size: 14px;
            padding: 8px 12px;
        }

        .add-menu-form .btn {
            font-size: 14px;
            padding: 8px 16px;
        }

        .success-message {
            background: #d1fae5;
            color: #065f46;
            padding: 16px;
            border-radius: 8px;
            margin-bottom: 20px;
            display: none;
        }

        .error-message {
            background: #fee2e2;
            color: #991b1b;
            padding: 16px;
            border-radius: 8px;
            margin-bottom: 20px;
            display: none;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>ðŸŽµ TIPSI Admin</h1>
            <p>Manage your nightlife venues and menus</p>
        </div>

        <div class="actions">
            <button class="btn btn-primary" onclick="openModal('venue-modal')">Create New Venue</button>
            <button class="btn btn-success" onclick="createDemoVenue()">Create Demo Venue</button>
            <a href="/health" class="btn btn-secondary">System Health</a>
        </div>

        <div id="success-message" class="success-message"></div>
        <div id="error-message" class="error-message"></div>

        <div class="venues-grid">
            <% venues.forEach(function(venue) { %>
                <div class="venue-card">
                    <div class="venue-header">
                        <% if (venue.logoUrl) { %>
                            <img src="<%= venue.logoUrl %>" alt="<%= venue.name %>" class="venue-logo">
                        <% } else { %>
                            <div class="venue-logo" style="background: <%= venue.brandColor %>">
                                <%= venue.name.charAt(0) %>
                            </div>
                        <% } %>
                        <div class="venue-info">
                            <h3><%= venue.name %></h3>
                            <p style="color: <%= venue.brandColor %>">Brand Color: <%= venue.brandColor %></p>
                        </div>
                    </div>

                    <div class="venue-stats">
                        <div class="stat">
                            <div class="stat-number"><%= venue.tables.length %></div>
                            <div class="stat-label">Tables</div>
                        </div>
                        <div class="stat">
                            <div class="stat-number"><%= venue.menuItems.length %></div>
                            <div class="stat-label">Menu Items</div>
                        </div>
                        <div class="stat">
                            <div class="stat-number"><%= venue.users.length %></div>
                            <div class="stat-label">Users</div>
                        </div>
                    </div>

                    <div class="menu-section">
                        <h4 class="menu-title">Menu Items</h4>
                        <div class="menu-items">
                            <% venue.menuItems.forEach(function(item) { %>
                                <div class="menu-item">
                                    <span class="menu-item-name"><%= item.name %></span>
                                    <span class="menu-item-price">â‚¬<%= (item.priceCents / 100).toFixed(2) %></span>
                                </div>
                            <% }); %>
                        </div>

                        <div class="add-menu-form">
                            <form onsubmit="addMenuItem(event, '<%= venue.id %>')">
                                <div class="form-group">
                                    <input type="text" class="form-input" name="name" placeholder="Item name" required>
                                </div>
                                <div class="form-group">
                                    <input type="text" class="form-input" name="category" placeholder="Category" required>
                                </div>
                                <div class="form-group">
                                    <input type="number" class="form-input" name="priceCents" placeholder="Price in cents" required>
                                </div>
                                <button type="submit" class="btn btn-primary">Add Item</button>
                            </form>
                        </div>
                    </div>
                </div>
            <% }); %>
        </div>
    </div>

    <!-- Create Venue Modal -->
    <div id="venue-modal" class="modal">
        <div class="modal-content">
            <div class="modal-header">
                <h2 class="modal-title">Create New Venue</h2>
                <span class="close" onclick="closeModal('venue-modal')">&times;</span>
            </div>
            <form onsubmit="createVenue(event)">
                <div class="form-group">
                    <label class="form-label">Venue Name</label>
                    <input type="text" class="form-input" name="name" required>
                </div>
                <div class="form-group">
                    <label class="form-label">Brand Color</label>
                    <input type="color" class="color-picker" name="brandColor" value="#6366f1" required>
                </div>
                <div class="form-group">
                    <label class="form-label">Logo (optional)</label>
                    <input type="file" class="form-input" name="logo" accept="image/*">
                </div>
                <button type="submit" class="btn btn-primary">Create Venue</button>
            </form>
        </div>
    </div>

    <script>
        function openModal(modalId) {
            document.getElementById(modalId).classList.add('show');
        }

        function closeModal(modalId) {
            document.getElementById(modalId).classList.remove('show');
        }

        function showMessage(message, type) {
            const messageEl = document.getElementById(type + '-message');
            messageEl.textContent = message;
            messageEl.style.display = 'block';
            
            setTimeout(() => {
                messageEl.style.display = 'none';
            }, 5000);
        }

        async function createVenue(event) {
            event.preventDefault();
            const form = event.target;
            const formData = new FormData(form);

            try {
                const response = await fetch('/admin/venue', {
                    method: 'POST',
                    body: formData
                });

                const result = await response.json();
                
                if (result.success) {
                    showMessage('Venue created successfully!', 'success');
                    closeModal('venue-modal');
                    form.reset();
                    setTimeout(() => location.reload(), 1000);
                } else {
                    throw new Error(result.error || 'Failed to create venue');
                }
            } catch (error) {
                console.error('Error:', error);
                showMessage('Failed to create venue: ' + error.message, 'error');
            }
        }

        async function addMenuItem(event, venueId) {
            event.preventDefault();
            const form = event.target;
            const formData = new FormData(form);

            try {
                const response = await fetch(`/admin/venue/${venueId}/menu`, {
                    method: 'POST',
                    body: formData
                });

                const result = await response.json();
                
                if (result.success) {
                    showMessage('Menu item added successfully!', 'success');
                    form.reset();
                    setTimeout(() => location.reload(), 1000);
                } else {
                    throw new Error(result.error || 'Failed to add menu item');
                }
            } catch (error) {
                console.error('Error:', error);
                showMessage('Failed to add menu item: ' + error.message, 'error');
            }
        }

        async function createDemoVenue() {
            try {
                const response = await fetch('/admin/demo', {
                    method: 'POST'
                });

                const result = await response.json();
                
                if (result.success) {
                    showMessage('Demo venue created successfully!', 'success');
                    setTimeout(() => location.reload(), 1000);
                } else {
                    throw new Error(result.error || 'Failed to create demo venue');
                }
            } catch (error) {
                console.error('Error:', error);
                showMessage('Failed to create demo venue: ' + error.message, 'error');
            }
        }

        // Close modal when clicking outside
        window.onclick = function(event) {
            if (event.target.classList.contains('modal')) {
                event.target.classList.remove('show');
            }
        }
    </script>
</body>
</html>
